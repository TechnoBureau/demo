name: ubi
on:
  #schedule:
  #  - cron: '31 14 * * *'
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  MAJOR: 9
  MINOR: 1

jobs:
  initialize:
    # The workflow runs on self hosted runner, having docker available
    runs-on: [ ubuntu-latest ]
    name: Initialize
    outputs:
      images: ${{ steps.identify-images.outputs.images }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          submodules: recursive
      - name: Identify images
        id: identify-images
        run: |
              cd builders
              result=""
              for d in * ; do
                #if [ -f "$d/build.sh" ]; then
                  if [ -z $result ]; then
                    result="$d"
                  else
                    result="$result,$d"
                  fi
                #fi
              done
              #echo $result
              echo "images=$result" >> $GITHUB_OUTPUT
              #echo "{images}={result}" >> $GITHUB_OUTPUT
      # - name: Prepare Git credentials script
      #   run: echo 'echo ${GITHUB_TOKEN}' > $GIT_ASKPASS && chmod +x $GIT_ASKPASS

  GenerateImageReleaseReport:
    name: Generate image release report
    if: ${{ always() }}
    needs: [ initialize ]
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab #v3.5.2

      - name: Generate images release report
        run: |
          images=${{ needs.initialize.outputs.images }}
          releaseReport="# ðŸš€ Released Packages $RELEASE ðŸš€\n"
          releaseReport+="| ðŸ“¦ Package | Internal Repository Location | Public Repository Location |\n"
          releaseReport+="| :-: | :-: | :-: |"
          IFS=',' read -ra imageArray <<< "$images"
          for image in "${imageArray[@]}"; do
            releaseReport+="\n|$image|1.0.0|1.0.0|"
          done
          echo -e "$releaseReport" >> $GITHUB_STEP_SUMMARY
          echo -e "\n" >> $GITHUB_STEP_SUMMARY

  # GeneratePackagesReleaseReport:
  #   name: Generate packages release report
  #   if: ${{ always() }}
  #   # needs: [ Initialize, ReleasePackages ]
  #   runs-on: [ ubuntu-latest ]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab #v3.5.2

  #     - name: Generate pakages release report
  #       run: |
  #         echo '# Hello world! ðŸš€' >> $GITHUB_STEP_SUMMARY

